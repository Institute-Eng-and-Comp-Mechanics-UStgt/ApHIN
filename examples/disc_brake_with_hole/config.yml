# %% General settings
save_plots: False  # Show plots and visualization


# %% General identification framework settings
experiment: db_with_hole_rsweep_testrun 
#     name of the experiment
load_network: False  # train the network or load the last pre-trained one
file_url: https://darus.uni-stuttgart.de/api/access/datafile/:persistentId?persistentId=doi:10.18419/darus-4418/1
data_dir: Null # set custom data directory of desired
data_name: disc_brake_with_hole.npz
faces: disc_faces.npy
ref_coords: disc_ref_coords.npy
t_end: Null # truncate when reading from .txt to reduce data memory
num_time_steps_load: Null # {Null} - use only for loading once, define integer number of target time steps


seed: 1 #  For reproducibility

# scaling_values: (list) scalar scalar values that each domain, defined by domain_split_vals, should be scaled with, if {None} it is scaled by the maximum value of each domain
scaling_values: Null #[theta_scaling, disp_scaling, optional: velocity_scaling]
# domain_split_vals: (list) integers that define the number of dofs for each domain, sum of all values needs to conincide with n_dn. If {None} it is considered as a single domain
# domain_split_vals: [1,3] # [theta, displacement, optional: velocity]
# domain_names: ["temp","disp"]
domain_split_vals: [1,3,3] # [theta, displacement, optional: velocity]
domain_names: ["temp","disp","vel"]
desired_bounds: [0, 1]   # desired bounds after scaling for u and mu
use_velocities: True # might be included in data already
use_savgol: False # load data with savgol

# decrease number of simulations
num_sim: 25 # Null if number of simulations should not be decreased or integer with the target number of simulations

# decrease number of time steps
num_time_steps: Null # {Null} if number of time steps should not be decreased or integer with the target number of time steps per trajectory

# train-test split
train_test_split_method: rand # sim_idx | rand, sim_idx uses predefined indices, rand uses test_size value
test_size: 10 # required for rand

# filter data (using a savgol filter)
filter_data: False 
interp_equidis_t: True
window: 20
order: 1

# cut start and end data
cut_time_start_and_end: True

# %% Disc brake data settings (get information from loaded data)
n_u: 1      # number of inputs
n_mu: 2     # number of parameters (not varying inputs)

ph_layer: phq   # ph | phq

# %% identification settings
r: 12 
#   reduced order
use_pca: True 
#  use PCA for the input
n_pca: 48  # number of PCA components
pca_scaling: False  # scale the PCA components
pca_comparison: True
pca_only: False  # only use PCA components without nonlinear autoencoder
l_rec: 1 #  loss weight for the reconstruction
l_dz: 1 #  loss weight for the dz
l_dx: 0.1 #  loss weight for the dx
l1: 0.0000000001  # L1 regularization
l2: 0  # L2 regularization
n_epochs: 6000
#   number of epochs
batch_size: 128  # batch size
layer_sizes_ph: # layer sizes
  - 32  # first layer
  - 32  # second layer
  - 32  # third layer
layer_sizes_ae: # layer sizes
  - 48  # first layer
  - 32 # second layer
  - 24  # third layer
activation_ae: elu  # activation function
activation_ph: elu  # activation function
lr: 0.000005  # learning rate
tensorboard: False  # Save model information for analysis in tensorboard
save_many_weights: False

only_save: True # do not show plots, only save to results folder

# save rms error for sweep experiments, e.g. experiment sweep over r
# requires dictionary in create_variation_of_parameters() - at the end of file
# furthermore, set calc_various_experiments=True in 'if __name__ == "__main__"'-Part
save_config_sweep_data: False
sweep_key: r  
common_folder_name: db_with_hole_rsweep # usually the same as the experiment name

# create 3D visualisation - requires Visualizer
create_3d_vis: True

# create custom state plot - trajectory plots
create_costum_plot: True